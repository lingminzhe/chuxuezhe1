<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.grgbanking.counter</groupId>
        <artifactId>grg-cloud-counter-csr</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>grg-cloud-counter-csr-service</artifactId>
    <packaging>jar</packaging>
    <description>坐席服务</description>

    <dependencies>
        <dependency>
            <groupId>com.grgbanking.counter</groupId>
            <artifactId>grg-cloud-counter-common-xss</artifactId>
        </dependency>
        <!-- Swagger -->
        <dependency>
            <groupId>com.grgbanking.counter</groupId>
            <artifactId>grg-cloud-counter-common-swagger</artifactId>
        </dependency>
        <!-- spring security、oauth2依赖 -->
<!--        <dependency>-->
<!--            <groupId>com.grgbanking.counter</groupId>-->
<!--            <artifactId>grg-cloud-counter-common-security</artifactId>-->
<!--        </dependency>-->
        <!-- sentinel 依赖 -->
        <dependency>
            <groupId>com.grgbanking.counter</groupId>
            <artifactId>grg-cloud-counter-common-sentinel</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <!--spring-cloud-config客户端依赖-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <!--web 模块-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- mybatis -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
        </dependency>
        <!--MySQL数据库-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- Dubbo -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-dubbo</artifactId>
        </dependency>

        <dependency>
            <groupId>com.grgbanking.counter</groupId>
            <artifactId>grg-cloud-counter-csr-api</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.grgbanking.counter</groupId>
            <artifactId>grg-cloud-counter-common-socket</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>2.5.4</version>
        </dependency>
        <dependency>
            <groupId>com.grgbanking.counter</groupId>
            <artifactId>grg-cloud-counter-common-lock</artifactId>
        </dependency>
        <dependency>
            <groupId>com.grgbanking.counter</groupId>
            <artifactId>grg-cloud-counter-common-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>com.grgbanking.counter</groupId>
            <artifactId>grg-cloud-counter-common-data</artifactId>
        </dependency>
        <dependency>
            <groupId>com.grgbanking.counter</groupId>
            <artifactId>grg-cloud-counter-iam-api</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>3.8.1</version>
        </dependency>

        <dependency>
            <groupId>io.socket</groupId>
            <artifactId>socket.io-client</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.7.12</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>


    </dependencies>

    <build>
        <!-- 如果不添加此节点mybatis的mapper.xml文件都会被漏掉。 -->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--使用docker-maven-plugin插件-->
<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>1.0.0</version>-->

<!--                &lt;!&ndash;将插件绑定在某个phase执行&ndash;&gt;-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>build-image</id>-->
<!--                        &lt;!&ndash;将插件绑定在package这个phase上。也就是说，-->
<!--                        用户只需执行mvn package ，就会自动执行mvn docker:build&ndash;&gt;-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->

<!--                <configuration>-->
<!--                    &lt;!&ndash;指定生成的镜像名,这里是我们的项目名&ndash;&gt;-->
<!--                    <imageName>${project.artifactId}</imageName>-->
<!--                    &lt;!&ndash;指定标签 这里指定的是镜像的版本，我们默认版本是latest&ndash;&gt;-->
<!--                    <imageTags>-->
<!--                        <imageTag>latest</imageTag>-->
<!--                    </imageTags>-->
<!--                    &lt;!&ndash; 指定我们项目中Dockerfile文件的路径&ndash;&gt;-->
<!--                    <dockerDirectory>${project.basedir}/src/main/resources</dockerDirectory>-->

<!--                    &lt;!&ndash;指定远程docker 地址&ndash;&gt;-->
<!--                    <dockerHost>http://192.168.51.51:2375</dockerHost>-->

<!--                    &lt;!&ndash; 这里是复制 jar 包到 docker 容器指定目录配置 &ndash;&gt;-->
<!--                    <resources>-->
<!--                        <resource>-->
<!--                            <targetPath>/</targetPath>-->
<!--                            &lt;!&ndash;jar包所在的路径  此处配置的即对应项目中target目录&ndash;&gt;-->
<!--                            <directory>${project.build.directory}</directory>-->
<!--                            &lt;!&ndash; 需要包含的 jar包 ，这里对应的是 Dockerfile中添加的文件名　&ndash;&gt;-->
<!--                            <include>${project.build.finalName}.jar</include>-->
<!--                        </resource>-->
<!--                    </resources>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>
